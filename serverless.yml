service: s3-presigned-apigateway-lambda
frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  stage: ${opt:stage, 'dev'}
  environment:
    BUCKET_NAME: ${env:BUCKET_NAME, "${self:service}-${self:provider.stage}-uploads"}
  apiGateway:
    # Define a managed API key and usage plan
    apiKeys:
      - ${self:service}-${self:provider.stage}-key
    usagePlan:
      quota:
        limit: 100000      # 100 K requests per DAY
        period: DAY
      throttle:
        rateLimit: 100     # steady‐state RPS
        burstLimit: 200    # short‐term spike capacity
  iamRoleStatements:
    - Effect: Allow
      Action: s3:PutObject
      Resource:
        - arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*

functions:
  urlSigner:
    handler: src/urlSigner.handler
    events:
      - http:
          path: /generate-upload-url
          method: POST
          private: true     # require x-api-key header

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        OwnershipControls:
          Rules:
            - ObjectOwnership: BucketOwnerEnforced
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true

